<Window x:Class="WpfApp1.Views.SensorInfo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1.Views"
        xmlns:global="clr-namespace:WpfApp1"
        xmlns:viewModels="clr-namespace:WpfApp1.ViewModels"
        mc:Ignorable="d"
        Title="Информация о датчике"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <!--<Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Padding" Value="5 2" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="MinWidth" Value="24" />
            <Setter Property="MinHeight" Value="24" />
        </Style>-->
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="0.5*" MaxHeight="300" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0"
                    DataContext="{Binding Path=DataContext.Root, RelativeSource={RelativeSource AncestorType=Window}}">
            <TabItem Header="Датчики"
                     DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=Window}}">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Height="Auto" Grid.ColumnSpan="2">
                        <Button Style="{StaticResource RemoveDbButton}" Command="{Binding RemoveFromDatabaseCommand}" />
                        <Button Style="{StaticResource SaveDbButton}" Command="{Binding WriteToDatabaseCommand}" />
                        <Button Style="{StaticResource FromJsonButton}" Command="{Binding ReadFromJsonCommand}" />
                        <WrapPanel Orientation="Horizontal" Height="Auto" 
                                   DataContext="{Binding Path=DataContext.Root, RelativeSource={RelativeSource AncestorType=Window}}">
                            <Button Style="{StaticResource ContentSaveIconButton}" Click="ButtonBase_OnClick" />
                            <Button Style="{StaticResource UndoIconButton}" Command="{Binding UndoCommand}" />
                            <Button Style="{StaticResource RedoIconButton}" Command="{Binding RedoCommand}" />
                            <Button Style="{StaticResource ExcelIconButton}" Command="{Binding GenerateExcelCommand}"
                                    CommandParameter="{Binding ElementName=RootDataGrid}" />
                            <Button Style="{StaticResource PdfIconButton}" Command="{Binding GeneratePdfCommand}"
                                    CommandParameter="{Binding ElementName=RootDataGrid}" />
                            <Button Style="{StaticResource WordIconButton}" Command="{Binding GenerateWordCommand}"
                                    CommandParameter="{Binding ElementName=RootDataGrid}" />
                        </WrapPanel>
                    </WrapPanel>
                    <DataGrid ItemsSource="{Binding Roots}"
                              SelectedItem="{Binding Root, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="1"
                              ColumnWidth="*" Grid.ColumnSpan="2"
                              Grid.Column="0"
                              AutoGenerateColumns="True"
                              CanUserDeleteRows="True"
                              AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn"
                              x:Name="RootDataGrid">
                        <!--<DataGridTextColumn Header="Описание датчика" Binding="{Binding Description}"/>
                        <DataGridTextColumn Header="Производитель" Binding="{Binding ManufacturerId}"/>
                        <DataGridTextColumn Header="Тип датчика" Binding="{Binding DeviceType}"/>
                        <DataGridTextColumn Header="Версия датчика" Binding="{Binding DeviceVersion}"/>-->
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Параметры">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Height="Auto">
                        <!--<Button Style="{StaticResource TableEditIconButton}" Command="{Binding Hart.SelectedParameter.StartEditCommand}" />-->
                        <Button Style="{StaticResource ContentSaveIconButton}" Click="ButtonBase_OnClick" />
                        <Button Style="{StaticResource DeleteIconButton}" Command="Delete" />
                        <Button Style="{StaticResource UndoIconButton}" Command="{Binding UndoCommand}" />
                        <Button Style="{StaticResource RedoIconButton}" Command="{Binding RedoCommand}" />
                        <Button Style="{StaticResource ExcelIconButton}" Command="{Binding GenerateExcelCommand}"
                                CommandParameter="{Binding ElementName=ParametersDataGrid}" />
                        <Button Style="{StaticResource PdfIconButton}" Command="{Binding GeneratePdfCommand}"
                                CommandParameter="{Binding ElementName=ParametersDataGrid}" />
                        <Button Style="{StaticResource WordIconButton}" Command="{Binding GenerateWordCommand}"
                                CommandParameter="{Binding ElementName=ParametersDataGrid}" />
                    </WrapPanel>
                    <DataGrid x:Name="ParametersDataGrid"
                              ItemsSource="{Binding Hart.Parameters, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Hart.SelectedParameter}"
                              SelectionMode="Single" Grid.Row="1"
                              AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn" />
                </Grid>
            </TabItem>
            <TabItem Header="Команды">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Height="Auto">
                        <Button Style="{StaticResource TableEditIconButton}"
                                Command="{Binding Hart.SelectedCommand.StartEditCommand}" />
                        <Button Style="{StaticResource ContentSaveIconButton}" Click="ButtonBase_OnClick" />
                        <Button Style="{StaticResource DeleteIconButton}" Command="Delete" />
                        <Button Style="{StaticResource UndoIconButton}" Command="{Binding UndoCommand}" />
                        <Button Style="{StaticResource RedoIconButton}" Command="{Binding RedoCommand}" />
                        <Button Style="{StaticResource ExcelIconButton}" Command="{Binding GenerateExcelCommand}"
                                CommandParameter="{Binding ElementName=ParametersDataGrid}" />
                        <Button Style="{StaticResource PdfIconButton}" Command="{Binding GeneratePdfCommand}"
                                CommandParameter="{Binding ElementName=CommandsDataGrid}" />
                        <Button Style="{StaticResource WordIconButton}" Command="{Binding GenerateWordCommand}"
                                CommandParameter="{Binding ElementName=CommandsDataGrid}" />
                    </WrapPanel>
                    <DataGrid x:Name="CommandsDataGrid"
                              ItemsSource="{Binding Hart.Commands, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Hart.SelectedCommand}"
                              SelectionMode="Single" Grid.Row="1"
                              AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn" />
                </Grid>
            </TabItem>
            <TabItem Header="Последовательности">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Height="Auto">
                        <Button Style="{StaticResource TableEditIconButton}"
                                Command="{Binding Hart.SelectedSequence.StartEditCommand}" />
                        <Button Style="{StaticResource ContentSaveIconButton}" Click="ButtonBase_OnClick" />
                        <Button Style="{StaticResource DeleteIconButton}" Command="Delete" />
                        <Button Style="{StaticResource UndoIconButton}" Command="{Binding UndoCommand}" />
                        <Button Style="{StaticResource RedoIconButton}" Command="{Binding RedoCommand}" />
                        <Button Style="{StaticResource ExcelIconButton}" Command="{Binding GenerateExcelCommand}"
                                CommandParameter="{Binding ElementName=SequesDataGrid}" />
                        <Button Style="{StaticResource PdfIconButton}" Command="{Binding GeneratePdfCommand}"
                                CommandParameter="{Binding ElementName=SequesDataGrid}" />
                        <Button Style="{StaticResource WordIconButton}" Command="{Binding GenerateWordCommand}"
                                CommandParameter="{Binding ElementName=SequesDataGrid}" />
                    </WrapPanel>
                    <DataGrid x:Name="SequesDataGrid"
                              ItemsSource="{Binding Hart.Sequences, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Hart.SelectedSequence}"
                              SelectionMode="Single" Grid.Row="1"
                              AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn" />
                </Grid>
            </TabItem>
            <TabItem Header="Графические элементы">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Height="Auto">
                        <Button Style="{StaticResource TableEditIconButton}"
                                Command="{Binding Hart.SelectedView.StartEditCommand}" />
                        <Button Style="{StaticResource ContentSaveIconButton}" Click="ButtonBase_OnClick" />
                        <Button Style="{StaticResource DeleteIconButton}" Command="Delete" />
                        <Button Style="{StaticResource UndoIconButton}" Command="{Binding UndoCommand}" />
                        <Button Style="{StaticResource RedoIconButton}" Command="{Binding RedoCommand}" />
                        <Button Style="{StaticResource ExcelIconButton}" Command="{Binding GenerateExcelCommand}"
                                CommandParameter="{Binding ElementName=ViewsDataGrid}" />
                        <Button Style="{StaticResource PdfIconButton}" Command="{Binding GeneratePdfCommand}"
                                CommandParameter="{Binding ElementName=ViewsDataGrid}" />
                        <Button Style="{StaticResource WordIconButton}" Command="{Binding GenerateWordCommand}"
                                CommandParameter="{Binding ElementName=ViewsDataGrid}" />
                    </WrapPanel>
                    <DataGrid x:Name="ViewsDataGrid"
                              ItemsSource="{Binding Hart.Views, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding Hart.SelectedView}"
                              SelectionMode="Single" Grid.Row="1"
                              AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn" />
                </Grid>
            </TabItem>
        </TabControl>
        <ListBox Grid.Row="1" ItemsSource="{Binding Logger.LogCollection}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}"
                       BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="DockPanel.Dock" Value="Bottom" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel LastChildFill="False" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </Grid>
</Window>